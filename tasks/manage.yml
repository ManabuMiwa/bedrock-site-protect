---
- name: Set htpasswd
  htpasswd:
    path: "{{ htpasswd_path }}/{{ item.site_hosts.canonical }}"
    name: "{{ item.value.htpasswd.name }}"
    password: "{{ item.value.htpasswd.password }}"
    crypt_scheme: "{{ item.value.htpasswd.crypt|default(omit) }}"
    owner: root
    group: root
    mode: 0644
  with_dict: "{{ wordpress_sites }}"
  when: item.value.htpasswd is defined

- name: Set Nginx Auth Type
  lineinfile:
    line: "  auth_basic 'Restricted';"
    insertafter: index index.php index.htm index.html;
    dest: "/etc/nginx/sites-available/{{ item.key }}.conf"
  with_dict: "{{ wordpress_sites }}"
  when: item.value.htpasswd is defined
  notify: reload nginx

- name: Set Nginx Auth file.
  lineinfile:
    line: "  auth_basic_user_file {{ htpasswd_path }}/{{ item.key }};"
    insertafter: auth_basic 'Restricted';
    dest: "/etc/nginx/sites-available/{{ item.key }}.conf"
  with_dict: "{{ wordpress_sites }}"
  when: item.value.htpasswd is defined
  notify: reload nginx

- name: Unset Nginx Auth Type
  lineinfile:
    line: auth_basic "Restricted";
    state: absent
    dest: "/etc/nginx/sites-available/{{ item.key }}.conf"
  with_dict: "{{ wordpress_sites }}"
  when: item.value.htpasswd is not defined
  notify: reload nginx

- name: Unset Nginx Auth file.
  lineinfile:
    line: "auth_basic_user_file {{ htpasswd_path }}/{{ item.key }};"
    state: absent
    dest: "/etc/nginx/sites-available/{{ item.key }}.conf"
  with_dict: "{{ wordpress_sites }}"
  when: item.value.htpasswd is not defined
  notify: reload nginx
